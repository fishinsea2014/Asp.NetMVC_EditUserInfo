@model DataSource.User 
@{
    Layout = null;
}
<!DOCTYPE html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,Chrome=1">
    <meta name="renderer" content="webkit">
    <title>My Profile</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrapValidator.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-fileinput/css/fileinput.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/fileinput.min.js"></script>
    <script src="~/Scripts/bootstrapValidator.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js'></script>


    @*<script src="~/Scripts/jstz.min.js"></script>*@

    <!--[if lte IE 8]>
    <script type="text/javascript" src="js/respond.js"></script>
    <![endif]-->
    <style type="text/css">
        div [class*="col-"] {
            /*border: 1px solid;*/
            height: 20px;
        }

        .container {
            background-color: gray;
            padding: 10px;
            height: 60em;
        }

        .title {
            height: 16em;
        }

        .password {
            height: 20em;
        }

        .timezone {
            height: 22em;
        }

        .permission {
            height: 18em;
        }

        .container {
            margin: 15px;
            border: 3px double;
        }

        .form-control {
            margin: 6px;
        }

        .pwd-btns {
            margin-left: 20px;
        }

        hr {
            height: 1px;
            border: none;
            border-top: 1px dashed #1E90FF;
            width: 100%;
        }

        .thumbnail {
            margin-right: 1em;
        }
    </style>
    <script type="text/javascript">
        jQuery(document).ready(function ($) {

            $("#edit-name-icon").click(function () {
                $("#edit-name-dialog").modal(
                );
            });


            $("#pwdForm").bootstrapValidator({
                message: 'This value is invalid',
                feedbackIcons: {
                    valid: 'glyphicon glyphion-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    prePwd: {
                        message: 'The previous password is invalid',
                        validators: {
                            notEmpty: {
                                message: 'The previous password is required and can not be empty'
                            }
                        }
                    },
                    newPwd: {
                        message: 'The new password is invalid',
                        validators: {
                            notEmpty: {
                                message: 'The new password is required and can not be empty'
                            },
                            stringLength: {
                                min: 6,
                                message: 'The new password must be more than 6'
                            },
                            regexp: {
                                regexp: /^[^ ]+$/,
                                message: 'The password can not have spaces'
                            }
                        }
                    },
                    confirmPwd: {
                        message: 'The new password is invalid',
                        validators: {
                            notEmpty: {
                                message: 'The confirmed password is required and can not be empty'
                            },
                            identical: {
                                field: 'newPwd',
                                message: 'The two new passwords do not match.'
                            }
                        }
                    }
                }
            }).on('success.form.bv', function (e) {
                //Prevent the bootstrap validator to post twice
                e.preventDefault();
            });

            setCurTimezone();

            $("#upload-photo").fileinput({

                previewFileType: "image",
                browseClass: "btn btn-success",
                browseLabel: "Select",
                browseIcon: "<i class=\"glyphicon glyphicon-picture\"></i> ",
                removeClass: "btn btn-danger",
                removeLabel: "Delete",
                removeIcon: "<i class=\"glyphicon glyphicon-trash\"></i> ",
                uploadClass: "btn btn-info",
                uploadLabel: "Upload",
                uploadIcon: "<i class=\"glyphicon glyphicon-upload\"></i> ",
                showUpload: true,
                uploadUrl: '/Home/UploadFile',
                allowedFileExtensions: ['jpg', 'png'],
                maxFileSize: 2000,
                maxFileCount: 1,
            }).on("fileuploaded", function (event, data, msg) {
                    var msg = data.response;
                    if (msg.result == "ok") {
                        $("#PhotoLink").val(msg.imageName);
                        alert("Upload photo succeed.");
                    } else {
                        alert("Failed to upload photo");
                    }
                });

        });

        function setCurTimezone() {
            var nowDate = new Date().getTime().toLocaleString();
            //var jstz = require('jstz');
            var timezone = jstz.determine();
            $("#cur-timezone").text(timezone.name());
        }

        function afterChangePwd(data) {
            if (data == "ok") {
                alert("Changing password succeed.");
                document.getElementById("pwdForm").reset();
                //$("#pwdForm").reset();
            } else {
                alert("Changing password failed.")
            }
        }

        function afterUpdateName(data) {
            if (data == "failed") {
                alert('Failed to update user name');
            } else {
                $("#edit-name-dialog").modal('hide');
                loadUserinfo(data);
                //window.location.reload();
            }
        }

        function loadUserinfo(data) {
            $("#full-name").text(data.FName + ' ' + data.LName);
            $("#title").text(data.Title);
            $("#org").text(data.Org);
            $("#photo-thumbnail").attr('src',"/UploadFiles/" + data.PhotoLink);
        }

        function afterUpdateTimezone(data) {
            if (data == "ok") {
                alert('Update timezone succeed.')
            } else {
                alert('Failed to update timezone.')
            }
        }

        function requestPermission(obj) {
            var thisObj = $(obj);
            var actionId = thisObj.attr("actionId");
            $("#edit-request-dialog").modal();
            $("#permission-dialog-actionId").attr("");
            $("#request-dialog-title").text(actionId);
            $("#permission-dialog-actionId").val(actionId);
        }

        function afterSetPermission(data) {
            //let permissionMap = new Map();
            $("#edit-request-dialog").modal('hide');
            //在此添加注释
            let ps = document.getElementsByClassName('permission-btn');
            for (var p of ps) {
                let actionId = parseInt(p.getAttribute('actionid'));
                console.log(actionId);
                for (var item of data) {
                    if (item.ActionId == actionId) {
                        p.innerHTML = updatePermissionBtn(item.Status);
                    }
                }
            }

        }

        function updatePermissionBtn(status) {
            if (status == 0) {
                return "Granted";
            } else if (status == 1) {
                return "Denied";
            }
            return "Pending";

        }


    </script>
</head>
<body>
    
    <div class="container">
        <div><h2>My Profile</h2></div>
        <div class="col-md-6">
            <div class="well title">
                <div>
                    <div class="pull-left">
                        <a href="#" class="thumbnail">
                            <img src="/UploadFiles/@Model.PhotoLink" id="photo-thumbnail" alt="Alternate Text" width="50" height="30" />
                        </a>
                    </div>
                    <div class="center-block">
                        <h3 id="full-name">@Model.FName  @Model.LName</h3>
                        <span class="glyphicon glyphicon-pencil" id="edit-name-icon" ></span>
                    </div>
                </div>
                <HR >
                <h3 id="title"> @Model.Title</h3>
                <h4 id="org">@Model.OrgName</h4>
            </div>
            <div class="well">
                    <h3>Change my password</h3>
                    <HR >
                    @using (Ajax.BeginForm("ChangePwd", "Home", new { }
                      , new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterChangePwd(data)" }
                      , new { id = "pwdForm" }))
                    {
                        @Html.HiddenFor(model => model.Id);

                            <div class="form-group">
                                <div class="">
                                    <input type="password" class="form-control pwd" id="pre-pwd" name="prePwd" required="required" placeholder="Previous password" />
                                </div>
                                <div class="">
                                    <input type="password" class="form-control pwd" id="new-pwd" name="newPwd" required="required" placeholder="New password" />
                                </div>
                                <div class="">
                                    <input type="password" class="form-control pwd" id="confirm-pwd" name="confirmPwd" required="required" placeholder="Confirm password" />
                                </div>
                                <span class="pwd-btns">
                                    <button class="btn btn-lg">Cancel</button>
                                    <input type="submit" id="btnModiPwd" value="Change Password" class="btn btn-lg btn-info" />
                                </span>
                            </div>

                    }


            </div>
        </div>

        <div class="col-md-6 ">
            <div class="well timezone">
                <h3>Time Zone</h3>
                <HR>
                <div>
                    <div>Current time zone: </div>
                    <div >Detected as <span id="cur-timezone"></span></div>
                </div>
                
                @using (Ajax.BeginForm("UpdateTimeZone", "Home", new { }
                , new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterUpdateTimezone" }
                , new { id = "timezone-form" }))
                {
                    @Html.HiddenFor(model => model.Id);
                    <div>
                        <input type="checkbox" name="set-default-timezone" id="set-default-timezone" />
                        <span>Override default timezone </span>
                    </div>

                    <div>
                        @Html.DropDownList("timezone-dropdownlist", ViewBag.timezoneList as IEnumerable<SelectListItem>,
                        new { @class = " dropdown-toggle form-control" })
                    </div>
                    <div>
                        <input type="submit" class="btn btn-success" style="margin-left:5em" value="Updata Timezone" />
                    </div>
                }
                    
                     

                <HR>

            </div>
            <div class="well permission">
                <h3>My Permissions</h3>
                @{                    
                    List<DataSource.Actions> allActions = ViewBag.AllActions;
                    List<DataSource.Permission> curPermissons = ViewBag.CurUserActions;
                    <table class="table" id="show-permissions">
                        @foreach (var item in allActions)
                        {
                            var permissionStatus = curPermissons.FindAll(r => r.ActionId == item.Id).FirstOrDefault();
                            string btnText = "";
                            string btnClass = "";
                            int actionId = item.Id;
                            if (permissionStatus == null )
                            {
                                btnText = "Request";
                                btnClass = "btn btn-info permission-btn";
                            }
                            else
                            {
                                if (permissionStatus.Status == (short)DataSource.Enum.PermissionEnum.Granted)
                                {
                                    btnText = "Granted";
                                    btnClass = "btn btn-default permission-btn";
                                }else if(permissionStatus.Status == (short)DataSource.Enum.PermissionEnum.Denied)
                                {
                                    btnText = "Denied";
                                    btnClass = "btn btn-default permission-btn";
                                }
                            }


                            <tr>
                                <td>@item.ActionName</td>
                                <td>
                                    <button class="@btnClass" actionId=@actionId onclick="requestPermission(this)">@btnText</button>
                                </td>
                            </tr>
                        }
                    </table>
                }

            </div>
        </div>
      </div>

    <div class="modal fade" id="edit-name-dialog" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h3>Edit Profile</h3> 
                </div>
                <div class="modal-body">
                    @using (Ajax.BeginForm("UpdateName", "Home", new { }
                , new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterUpdateName(data)" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Password);
                        @Html.HiddenFor(model => model.TimeZoneId);
                        @Html.HiddenFor(model => model.PhotoLink);
                        @Html.HiddenFor(model => model.Id);
                        <div class="form-horizontal">

                            <div class="form-group">
                                @Html.LabelFor(model => model.FName, new { @class = "col-md-3" })
                                @Html.EditorFor(model => model.FName, new { @class = "col-md-9" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LName, new { @class = "col-md-3" })
                                @Html.EditorFor(model => model.LName, new { @class = "col-md-9" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, new { @class = "col-md-3" })
                                @Html.EditorFor(model => model.Title, new { @class = "col-md-9" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OrgName, new { @class = "col-md-3" })
                                @Html.EditorFor(model => model.OrgName, new { @class = "col-md-9" })
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.PhotoLink, new { @class = "col-md-3" })
                                @Html.EditorFor(model => model.PhotoLink, new { @class = "col-md-9" })
                                <button class="btn btn-info" id="choose-photo">Browse...</button>*@
                                
                               <input id="upload-photo" name="PhotoLink" type="file" accept="image/" />
                                
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Update</button>
                        </div>
                    }
                    
                </div>

            </div>
        </div>
       

    </div>
    <div id="edit-request-dialog" class="modal fade" >
        <div class="modal-dialog"   role="document">            
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h3>Set Permissions: <span id="request-dialog-title"></span></h3>
                    @using (Ajax.BeginForm("SetPermission", "Home", new { }
                        , new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterSetPermission(data)" }))
                    {

                        <div>
                            <input type="hidden" name="actionId" id="permission-dialog-actionId" value=""/>
                            <input type="hidden" name="userId" value=@Model.Id />
                            <input type="radio" name="permission" value="0" /><span>Grant</span>
                            <input type="radio" name="permission" value="1" /><span>Deny</span>
                        </div>
                        <input type="submit" class="btn btn-primary" value="Submit" />
                    }
                    
                </div>

            </div>

        </div>
    </div>
</body>


